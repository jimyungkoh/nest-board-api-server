name: CI/CD

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
          KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          # 서버 포트 설정
          SERVER_PORT: 3000
          # 데이터베이스 설정
          DB_TYPE: mysql
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USERNAME: root
          DB_PASSWORD: root
          DB_DATABASE: test
          DB_SYNCHRONIZE: true
          # 비밀번호 해시를 위한 Bcrypt 솔트 라운드
          BCRYPT_SALT_ROUNDS: 12
          # JWT 비밀 키
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          # JWT 액세스 토큰 설정
          JWT_ACCESS_TOKEN_EXPIRES_IN: 1m
          JWT_ACCESS_TOKEN_SECRET: ${{ secrets.JWT_ACCESS_TOKEN_SECRET }}
          # JWT 리프레시 토큰 설정
          JWT_REFRESH_TOKEN_EXPIRES_IN: 30d
          JWT_REFRESH_TOKEN_SECRET: ${{ secrets.JWT_REFRESH_TOKEN_SECRET }}
          # AWS S3 설정
          AWS_S3_REGION: ap-northeast-2
          AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET_NAME: nest-board-api-server
          # nanoid 설정
          NANOID_LENGTH: 18
        run: |
          mkdir -p ~/.ssh
          echo "$KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST '
            docker stop nest-board-api-server || true
            docker rm nest-board-api-server || true
            docker build -t nest-board-api-server .
            docker run -d --name nest-board-api-server \
              -p 80:3000 \
              -e SERVER_PORT="${{ env.SERVER_PORT }}" \
              -e DB_TYPE="${{ env.DB_TYPE }}" \
              -e DB_HOST="${{ env.DB_HOST }}" \
              -e DB_PORT="${{ env.DB_PORT }}" \
              -e DB_USERNAME="${{ env.DB_USERNAME }}" \
              -e DB_PASSWORD="${{ env.DB_PASSWORD }}" \
              -e DB_DATABASE="${{ env.DB_DATABASE }}" \
              -e DB_SYNCHRONIZE="${{ env.DB_SYNCHRONIZE }}" \
              -e BCRYPT_SALT_ROUNDS="${{ env.BCRYPT_SALT_ROUNDS }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e JWT_ACCESS_TOKEN_EXPIRES_IN="${{ env.JWT_ACCESS_TOKEN_EXPIRES_IN }}" \
              -e JWT_ACCESS_TOKEN_SECRET="${{ secrets.JWT_ACCESS_TOKEN_SECRET }}" \
              -e JWT_REFRESH_TOKEN_EXPIRES_IN="${{ env.JWT_REFRESH_TOKEN_EXPIRES_IN }}" \
              -e JWT_REFRESH_TOKEN_SECRET="${{ secrets.JWT_REFRESH_TOKEN_SECRET }}" \
              -e AWS_S3_REGION="${{ env.AWS_S3_REGION }}" \
              -e AWS_S3_ACCESS_KEY_ID="${{ secrets.AWS_S3_ACCESS_KEY_ID }}" \
              -e AWS_S3_SECRET_ACCESS_KEY="${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}" \
              -e AWS_S3_BUCKET_NAME="${{ env.AWS_S3_BUCKET_NAME }}" \
              -e NANOID_LENGTH="${{ env.NANOID_LENGTH }}" \
              nest-board-api-server
          '
